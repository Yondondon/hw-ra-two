"Название задачи","Статус","Баллы"
"Реализовать отображение книг на хуках","0","2"
"Реализовать добавление и удаление книг на хуках","0","2"
"Реализовать отображение подборок на хуках","0","2"
"Реализовать добавление и удаление подборок на хуках","0","2"
"Реализовать добавление и удаление книг через REDUX","0","5"
"Реализовать добавление и удаление подборок через REDUX","0","5"
"Использовать сагу для получения информации о книгах, с возможностью изменить запрошенную книгу, остановить загрузку с сервера, обработать ошибку, если сервер недоступен","0","5"
"Использовать эпик для получения информации о подборках, с возможностью изменить запрошенную книгу, остановить загрузку с сервера, обработать ошибку, если сервер недоступен","5","5"
"Использовать formik для ввода и валидации информации о книге","0","5"
"Использовать react-hook-form для ввода и валидации информации о подборке","5","5"
"Интеграционный тест для 1 компонента (с сервером и асинхронностью) с использованием @testing-library/react","0","10"
"Тест компонента с мокированием сервера","0","5"
"Тест компонента с мокированием работы с Redux","0","5"
"Тест саги","0","3"
"Тест эпика","0","3"
"Тест для редьюсера (как минимум одного, не самого простого)","0","5"
"Тест для стора для всего процесса добавления/удаления/просмотра книги и списка книг (используйте redux-dev-tools для генерации, оценка ставится только при наличии всех user stories)","0","10"
"E2E тест для добавления/удаления книги (также создавайте скриншоты), используйте puppeteer или аналог","0","5"
"E2E тест для добавления/удаления списка книг (также создавайте скриншоты), используйте puppeteer или аналог","0","5"
"Объединение в фронтэндов в монорепо (минимум 2 подпроекта), используя lerna или rush","0","7"
"Создание Dockerfile для упаковки всего решения в докер","0","4"
"Бонус за красивый дизайн","0","5"
"Бонус за красивый код","0","5"